---
title: 数据库相关知识 
tags: 数据库, mysql
grammar_cjkRuby: true
---



### @JoinColumn与@Column

 @JoinColumn与@Column标记一样，是用于注释表中的字段的。它的属性与@Column属性有很多相同之处，这里就不详细讲述。请读者参阅5.2.2小节中有关@Column属性的部分。 

l         @JoinColumn与@Column相区别的是：@JoinColumn注释的是保存表与表之间关系的字段，它要标注在实体属性上。而@Column标注的是表中不包含表关系的字段。 

l         与@Column标记一样，name属性是用来标识表中所对应的字段的名称。例如customer表中存在字段addr_id，标识的代码如下所示。 

@OneToOne 

@JoinColumn(name = "addr_id") 

public AddressEO getAddress() { 

         return address; 

} 

若此时，不设置name的值，则在默认情况下，name的取值遵循以下规则： 

name=关联表的名称+“_”+ 关联表主键的字段名 

例如，CustomerEO实体中，如果不指定name的值，默认将对应name=address_id；因为@JoinColumn注释在实体 AddressEO属性上，实体AddressEO对应的表名为“address”；表address的主键是“id”，所以此时对应的默认的字段名称为 “address_id”。 


提示：此规则只适用于与@OneToOne标记同时使用时。若与@ManyToOne或@ManyToMany标记同时使用时，将遵循其他的规则。 

l         默认情况下，关联的实体的主键一般是用来做外键的。但如果此时不想主键作为外键，则需要设置referencedColumnName属性。例如，将address表中增加一个字段“ref_id”，address表的建表SQL变为以下所示。 

CREATE TABLE address ( 

id int(20) NOT NULL auto_increment, 

ref_id int int(20) NOT NULL, 

province varchar(50) , 

city varchar(50) , 

postcode varchar(50) , 

detail varchar(50) , 

PRIMARY KEY (id) 

) 

此时，通过customer表中的“address_id”字段关联的是address表中的“ref_id”，而“ref_id”并不是address表中的主键，则实体中标注如代码下所示。 

@OneToOne 

@JoinColumn(name = "address_id",referencedColumnName="ref_id") 

public AddressEO getAddress() { 

         return address; 

} 


属性referencedColumnName标注的是所关联表中的字段名，若不指定则使用的所关联表的主键字段名作为外键。 

l         JoinColumn标记不仅能够与@OneToOne使用，也可以@ManyToOne或@ManyToMany标记同时使用，它们所表示的含义不同，这些内容将在下文详细讲述。




去除掉mysql 摸个字段的所有数字
update `tdf_3_li` set 院校名称=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(院校名称,'0',''),'1',''),'2',''),'3',''),'4',''),'5',''),'6',''),'7',''),'8',''),'9','')




update `tdf_3_li` set 院校名称=REPLACE(院校名称,'（）','')



MYsql 想要清除一个字段里所的的中文汉字如何操作，只留里面的数字和空格和冒号！
想要清除一个字段里所的的中文汉字如何操作，只留里面的数字和空格和冒号！号求语句！
陈伟19860501 | 浏览 896 次
发布于2011-11-23 18:28
# 知识大富翁—值得血拼的不止双11！#
最佳答案
update 表名 set 字段名=replace(convert(字段名 using ascii),'?','')



1. 语法介绍
      有三张表a、b、c，现在需要从表b和表c中分别查几个字段的值插入到表a中对应的字段。对于这种情况，可以使用如下的语句来实现：

INSERT INTO db1_name (field1,field2) SELECT field1,field2 FROM db2_name
 

      上面的语句比较适合两个表的数据互插，如果多个表就不适应了。对于多个表，可以先将需要查询的字段JOIN起来，然后组成一个视图后再SELECT FROM就可以了：

INSERT INTO a (field1,field2) SELECT * FROM(SELECT b.f1,c.f2 FROM b JOIN c) AS tb
 

      其中f1是表b的字段，f2是表c的字段，通过JOIN查询就将分别来自表b和表c的字段进行了组合，然后再通过SELECT嵌套查询插入到表a中，这样就满足了这个场景了，如果需要不止2个表，那么可以多个JOIN的形式来组合字段。


